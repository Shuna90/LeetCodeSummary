Union Find Summary

data structure
Integer array id[] of size N
Interpretation id[i] is parent of i
Root of i is id[id[..id[i]....]]
keep going until doesn't change

public class QuickUnion{
	private int[] id;

	public QuickUnion(int N){
		id = new int[N];
		for (int i = 0; i < N; i++){
			id[i] = i;
		}
	}

	private int root(int i){	//time proportional to depth of i
		while (i != id[i]){
			id[i] = id[id[i]];	// point to granparent to Keeps tree almost completely flat
			i = id[i]; 
		}      
		return i;
	}

	public boolean find(int p, int q){	//time proportional to depth of p and q
   		return root(p) == root(q);
	}	

	public void unite(int p, int q){
   		int i = root(p);
   		int j = root(q);
   		id[i] = j;
   	}